{"version":3,"sources":["Components/User/UserStatsGraphs.module.css","Components/User/UserStatsGraphs.js"],"names":["module","exports","UserStatsGraphs","data","React","useState","graph","setGraph","total","setTotal","useEffect","graphData","map","item","x","title","y","Number","acessos","reduce","a","b","className","styles","graphItem","innerRadius","padding","top","bottom","left","right","style","fillOpacity","stroke","strokeWidth","labels","fontSize","fill","alignment"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,MAAQ,+BAA+B,UAAY,mCAAmC,MAAQ,iC,uHCsCjGC,UAnCS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,EAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BH,IAAMC,SAAS,GAAzC,mBAAOG,EAAP,KAAcC,EAAd,KAgBA,OAdAL,IAAMM,WAAU,WACd,IAAMC,EAAYR,EAAKS,KAAI,SAAAC,GACzB,MAAO,CACLC,EAAGD,EAAKE,MACRC,EAAGC,OAAOJ,EAAKK,aAIff,GAAMM,EACRN,EAAKS,KAAI,gBAAGM,EAAH,EAAGA,QAAH,OAAiBD,OAAOC,MAAUC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,MAElEd,EAASI,KACR,CAACR,IAGF,0BAASmB,UAAS,UAAKC,IAAOjB,MAAZ,cAAlB,UACE,qBAAKgB,UAAS,UAAKC,IAAOf,MAAZ,YAAqBe,IAAOC,WAA1C,SACE,0CAAahB,OAEf,qBAAKc,UAAWC,IAAOC,UAAvB,SACE,cAAC,IAAD,CAAYrB,KAAMG,EAAOmB,YAAa,GAAIC,QAAS,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IAAMC,MAAO,CAAE5B,KAAM,CAAE6B,YAAa,GAAIC,OAAQ,OAAQC,YAAa,GAAMC,OAAQ,CAAEC,SAAU,GAAIC,KAAM,aAEtM,qBAAKf,UAAWC,IAAOC,UAAvB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYc,UAAU,QAAQnC,KAAMG","file":"static/js/4.f47d384b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"UserStatsGraphs_graph__3hgh_\",\"graphItem\":\"UserStatsGraphs_graphItem__3h-YN\",\"total\":\"UserStatsGraphs_total__3kZM6\"};","import React from 'react';\r\nimport styles from './UserStatsGraphs.module.css';\r\nimport { VictoryPie, VictoryChart, VictoryBar } from 'victory';\r\n\r\nconst UserStatsGraphs = ({ data }) => {\r\n  const [graph, setGraph] = React.useState([]);\r\n  const [total, setTotal] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    const graphData = data.map(item => {\r\n      return {\r\n        x: item.title,\r\n        y: Number(item.acessos)\r\n      }\r\n    });\r\n\r\n    if (data) setTotal(\r\n      data.map(({ acessos }) => Number(acessos)).reduce((a, b) => a + b),\r\n    );\r\n    setGraph(graphData);\r\n  }, [data]);\r\n\r\n  return (\r\n    <section className={`${styles.graph} animeLeft`}>\r\n      <div className={`${styles.total} ${styles.graphItem}`}>\r\n        <p>Acessos: {total}</p>\r\n      </div>\r\n      <div className={styles.graphItem}>\r\n        <VictoryPie data={graph} innerRadius={50} padding={{ top: 20, bottom: 20, left: 80, right: 80 }} style={{ data: { fillOpacity: .9, stroke: '#fff', strokeWidth: 2, }, labels: { fontSize: 14, fill: '#333' } }} />\r\n      </div>\r\n      <div className={styles.graphItem}>\r\n        <VictoryChart>\r\n          <VictoryBar alignment=\"start\" data={graph}></VictoryBar>\r\n        </VictoryChart>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default UserStatsGraphs;"],"sourceRoot":""}